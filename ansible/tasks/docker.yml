# Docker setup
- name: "Docker | Install apt-transport-https"
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
    state: latest
    update_cache: true

- name: "Docker | Add GPG key"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: "Docker | Add repository into sources list"
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: "Docker | Installation"
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: true

- name: Add user to docker groups
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: "docker"
    append: true

# Docker-Compose setup
- name: Get latest version of Docker Compose from Github API
  uri:
    url: "https://api.github.com/repos/docker/compose/releases/latest"
    return_content: yes
  register: url_content

- name: Set latest version in docker_compose_version variable
  set_fact:
    docker_compose_version: "{{ url_content.json.name }}"

- name: Install Docker Compose (if configured).
  become: yes
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-{{ ansible_architecture }}"
    dest: "/usr/local/bin/docker-compose"
    mode: 0755

# Add Alias
## Remove all container : docker ps -aq | xargs docker stop | xargs docker rm
- name: "Docker | Add Shell aliases"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "~/.aliases"
    create: yes
    mode: 0644
    line: 'alias {{ item.alias }}="{{ item.commandLine }}"'
    regexp: "^alias {{ item.alias }}="
  with_items:
    - { alias: "docker-remove_all", commandLine: "sudo docker system prune -a" }
    - { alias: "docker-remove_all_containers", commandLine: "sudo docker stop \\$(sudo docker ps -a -q); sudo docker rm \\$(sudo docker ps -a -q)" }
    - { alias: "docker-remove_all_images", commandLine: "sudo docker rmi \\$(docker images -a -q)" }
    - { alias: "docker-remove_all_volumes", commandLine: "sudo docker volume rm \\$(sudo docker volume ls -q)" }
    - { alias: "docker-stop_all_containers", commandLine: "sudo docker stop \\$(sudo docker ps -a -q);" }