- name: "Elasticsearch | Create Docker network"
  community.docker.docker_network:
    name: elastic

## Elasticsearch installation
- name: "Elasticsearch | Create Docker container"
  community.docker.docker_container:
    name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    recreate: true
    env: 
        node.name: "elasticsearch01"
        ES_JAVA_OPTS: "-Xms2g -Xmx2g"
        network.host: "0.0.0.0"
        bootstrap.memory_lock: "true"
        discovery.type: "single-node"
        xpack.security.enabled: "false"
        xpack.security.enrollment.enabled: "false"
    ports:
      - 9200:9200
    networks:
      - name: "elastic"
    ulimits: 
      - nofile:65536:65536

## Then, wait server is up and running to kill it
#- name: "Elasticsearch | Wait server is up and running"
#  ansible.builtin.uri:
#    url: http://127.0.0.1:9200
#  register: result
#  until: "result.status == 200"
#  retries: 10
#  delay: 60
#
#- name: "Elasticsearch | Disable Replica"
#  become: true
#  ansible.builtin.shell: "curl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{\"index.number_of_replicas\" : \"0\",  \"index.number_of_shards\" : \"1\"}'"

## Kibana installation
- name: "Kibana | Create Docker container"
  community.docker.docker_container:
    name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.0
    recreate: true
    env:
        ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
        TELEMETRY_ENABLED: 'false'
        XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: "d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa"
    ports:
      - 5601:5601
    networks:
      - name: "elastic"
