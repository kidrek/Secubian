- name: "Zircolite | set PythonVersion"
  ansible.builtin.set_fact:
    python_version : "3.9.18" 

- name: "Zircolite | Install requirements"
  apt:
    name: 
      - cargo
    state: present

- name: "Zircolite | Download repository"
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ item.repo }}"
    accept_hostkey: yes
    dest: "{{ item.dest }}"
    recursive: yes
    force: yes
  with_items:
    - { repo: "https://github.com/wagga40/Zircolite.git", dest: "{{ DFIR_toolsDir }}/analyse/tools/windows_evtx/Zircolite" }

- name: "PyEnv | Install python {{ python_version }}"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: ". $HOME/.env && $HOME/.pyenv/bin/pyenv install {{ python_version }}"
  ignore_errors: true

- name: "Zircolite | Set python version"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: "cd {{ DFIR_toolsDir }}/analyse/tools/windows_evtx/Zircolite; $HOME/.pyenv/bin/pyenv local {{ python_version }}"

- name: "Zircolite | Requirements tools installation"
  become_user: "{{ ansible_user }}"
  ansible.builtin.pip:
    requirements: "{{ DFIR_toolsDir }}/analyse/tools/windows_evtx/Zircolite/requirements.txt"
    virtualenv: "$HOME/.pyenv/versions/{{ python_version }}"
    virtualenv_command: "$HOME/.pyenv/bin/pyenv virtualenv {{ python_version }}"

- name: "Zircolite | Update rules"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: "cd {{ DFIR_toolsDir }}/analyse/tools/windows_evtx/Zircolite; $HOME/.pyenv/versions/{{ python_version }}/bin/python ./zircolite.py -U"
  ignore_errors: true

- name: "Zircolite | Add alias"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "~/.aliases"
    create: yes
    mode: 0644
    line: "alias {{ item.alias }}='{{ item.commandLine }}'"
    regexp: "^alias {{ item.alias }}="
  with_items:
    - { alias: "zircolite.py", commandLine: "$HOME/.pyenv/versions/{{ python_version }}/bin/python {{ DFIR_toolsDir }}/analyse/tools/windows_evtx/Zircolite/zircolite.py" }
