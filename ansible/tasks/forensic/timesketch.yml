
- name: "Timesketch | Check if folder exists"
  stat:
    path: "{{ DFIR_toolsDir }}/timesketch"
  register: timesketchDirectory
  when: arch == "amd64"

- name: "Timesketch | Create folder"
  become_user: "{{ ansible_user }}"
  file:
    path: "{{ DFIR_toolsDir }}/timesketch"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Download setup script"
  become_user: "{{ ansible_user }}"
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/google/timesketch/master/contrib/deploy_timesketch.sh
    dest: "{{ DFIR_toolsDir }}/timesketch/deploy_timesketch.sh"
    mode: 0755 
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Execute deploy script"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: cd {{ DFIR_toolsDir }}/timesketch; yes N | sudo ./deploy_timesketch.sh;
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Change ownership"
  ansible.builtin.file:
    state: directory
    path: "{{ DFIR_toolsDir }}/timesketch"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists


- name: "Timesketch | modify memory usage"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "{{ DFIR_toolsDir }}/timesketch/timesketch/config.env"
    line: 'OPENSEARCH_MEM_USE_GB=4'
    regexp: "^OPENSEARCH_MEM_USE_GB="
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | modify HTTPS TCP Port"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "{{ DFIR_toolsDir }}/timesketch/timesketch/config.env"
    line: 'NGINX_HTTPS_PORT=5443'
    regexp: "^NGINX_HTTPS_PORT="
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | modify HTTP TCP Port"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "{{ DFIR_toolsDir }}/timesketch/timesketch/config.env"
    line: 'NGINX_HTTP_PORT=5080'
    regexp: "^NGINX_HTTP_PORT="
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists


- name: "Timesketch | Download tags file"
  become_user: "{{ ansible_user }}"
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/kidrek/AllthingsTimesketch/refs/heads/master/tags.yaml
    dest: "{{ DFIR_toolsDir }}/timesketch/timesketch/etc/timesketch/tags.yaml"
    mode: 0644
    force: true
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Start docker"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: cd {{ DFIR_toolsDir }}/timesketch/timesketch; sudo docker-compose up -d;
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Check if container is running"
  wait_for:
    host: "127.0.0.1"
    port: 5080
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

#- name: "Timesketch | Find the rule files"
##  become_user: "{{ ansible_user }}"
#  ansible.builtin.find:
#    paths: "{{ DETECTION_rulesDir }}/sigma/sigmaHQ/rules/windows"
#    recurse: yes
#    patterns: '.*\.yml'
#    use_regex: true
#  register: rulefiles
#  when: 
#    - arch == "amd64"
#    - not timesketchDirectory.stat.exists

#- name: "Timesketch | Copy rules to timesketch"
##  become_user: "{{ ansible_user }}"
#  ansible.builtin.copy: 
#    src: "{{ item.path }}"
#    remote_src: yes
#    dest: "{{ DFIR_toolsDir }}/timesketch/timesketch/etc/timesketch/sigma/rules/"
#  with_items:
#    - "{{rulefiles.files}}"
#  when: 
#    - arch == "amd64"
#    - not timesketchDirectory.stat.exists

- name: "Timesketch | Add aliases"
  become_user: "{{ ansible_user }}"
  lineinfile:
    dest: "~/.aliases"
    create: yes
    mode: 0644
    line: 'alias timesketch="cd {{ DFIR_toolsDir }}/timesketch/timesketch; sudo docker-compose up"'
    regexp: "^alias timesketch="
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

## Timesketch Configuration
### Generate password
- include: tasks/keepassXC_generate_password.yml

### Add Timesketch entry in keepassXC
- name: "Timesketch | Add Entry in keepassXC"
  become_user: "{{ ansible_user }}"
  shell: "printf \"%s\n%s\" {{ keepass_db_password }} {{ password }} | keepassxc-cli add --url 'http://127.0.0.1:5080/' -u '{{ ansible_user }}' -p {{ keepass_db_path }} timesketch"
  delegate_to: localhost
  register: result
  ignore_errors: False


- name: "Timesketch | Create user"
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: sleep 30; cd {{ DFIR_toolsDir }}/timesketch/timesketch; sudo docker-compose exec timesketch-web tsctl create-user {{ ansible_user }} --password {{ password }};
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

- name: "Timesketch | Stop a container"
  docker_container:
    name: "{{ item }}"
    state: stopped
    restart_policy: no
  loop:
    - "timesketch-web"
    - "timesketch-web-legacy"
    - "timesketch-worker"
    - "opensearch"
    - "postgres"
    - "redis"
    - "nginx"
  when: 
    - arch == "amd64"
    - not timesketchDirectory.stat.exists

